/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package iu;

import audio.Sound;
import Log.LogExcepcion;
import imagenes.GestorRutasImagenes;
import java.awt.Color;
import java.awt.event.ActionEvent;
import javax.swing.JLabel;
import javax.swing.Timer;
import modelo.Xogo;
import javax.swing.BorderFactory;
import javax.swing.JPanel;
import javax.swing.JSlider;

/**
 *
 * @author ThePandogs
 *
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    //TIMER
    private Timer timerCrono;
    private Timer timer;
    private Timer timerFPS;
    private Timer contadorPuntuacion;

    //CONTROLADOR_SONIDO
    private Sound sonido;

    //GESTOR_IMAGENES
    private GestorRutasImagenes gestorRutasImagenes;

    //LOGGER
    private LogExcepcion logExcepcion;

    //XOGO
    private Xogo xogo;

    //PUNTUACIONES
    private final int SCORELINEA = 45;
    private final int SCORECHOCACHAN = 15;
    private final int SCORELEVELUP = 70;

    private int cronoTime;
    private int score;

    private int puntuacionPendienteSumar = 0;
    private int speedGameDelay;

    public VentanaPrincipal() {
        initComponents();
        logExcepcion = new LogExcepcion();
        sonido = new Sound(this);
        gestorRutasImagenes = new GestorRutasImagenes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pausePanel = new javax.swing.JPanel();
        pauseTitle = new javax.swing.JLabel();
        restartPause = new javax.swing.JButton();
        mainMenuPause = new javax.swing.JButton();
        gameOverPanel = new javax.swing.JPanel();
        youLoseTitle = new javax.swing.JLabel();
        levelTile = new javax.swing.JLabel();
        timeTitle = new javax.swing.JLabel();
        scoreTitle = new javax.swing.JLabel();
        linesTitle = new javax.swing.JLabel();
        linesGameOver = new javax.swing.JLabel();
        scoreGameOver = new javax.swing.JLabel();
        timeGameOver = new javax.swing.JLabel();
        levelGameOver = new javax.swing.JLabel();
        borderlbl = new javax.swing.JLabel();
        restartGameOver = new javax.swing.JButton();
        mainMenuGameOver = new javax.swing.JButton();
        gameJPanel = new javax.swing.JPanel();
        tglPause = new javax.swing.JToggleButton();
        panelXogo = new javax.swing.JPanel();
        lblBackgroundGame = new javax.swing.JLabel();
        panelScore = new javax.swing.JPanel();
        lblScoreTitle = new javax.swing.JLabel();
        lblScore = new javax.swing.JLabel();
        panelNext = new javax.swing.JPanel();
        lblNextTitle = new javax.swing.JLabel();
        panelNextFigure = new javax.swing.JPanel();
        panelLevel = new javax.swing.JPanel();
        lblLevelTitle = new javax.swing.JLabel();
        progressLevel = new style.CircleProgressBar();
        lblLevel = new javax.swing.JLabel();
        panelLine = new javax.swing.JPanel();
        lblLineTitle = new javax.swing.JLabel();
        lblLine = new javax.swing.JLabel();
        panelTime = new javax.swing.JPanel();
        lblTime = new javax.swing.JLabel();
        lblTimeTitle = new javax.swing.JLabel();
        backgroundProgram = new javax.swing.JLabel();
        menuJPanel = new javax.swing.JPanel();
        panelMainMenu = new javax.swing.JPanel();
        Playlbl = new javax.swing.JLabel();
        Exitlbl = new javax.swing.JLabel();
        levelJSlider = new javax.swing.JSlider();
        levelLbl = new javax.swing.JLabel();
        levlLblTitle = new javax.swing.JLabel();
        panelMainMenuBorder = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1100, 950));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1100, 950));
        getContentPane().setLayout(null);

        pausePanel.setBackground(new java.awt.Color(51, 51, 51));
        pausePanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pausePanel.setForeground(new java.awt.Color(255, 255, 255));
        pausePanel.setAlignmentX(0.0F);
        pausePanel.setAlignmentY(0.0F);
        pausePanel.setMaximumSize(new java.awt.Dimension(450, 330));
        pausePanel.setMinimumSize(new java.awt.Dimension(450, 330));
        pausePanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pausePanelKeyPressed(evt);
            }
        });
        pausePanel.setLayout(null);
        pausePanel.setVisible(false);

        pauseTitle.setFont(new java.awt.Font("Segoe UI", 1, 65)); // NOI18N
        pauseTitle.setForeground(new java.awt.Color(255, 255, 255));
        pauseTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pauseTitle.setText("Pause");
        pausePanel.add(pauseTitle);
        pauseTitle.setBounds(30, 20, 390, 80);

        restartPause.setBackground(new java.awt.Color(30, 30, 30));
        restartPause.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        restartPause.setForeground(new java.awt.Color(255, 255, 255));
        restartPause.setText("Restart");
        restartPause.setFocusable(false);
        restartPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartPauseActionPerformed(evt);
            }
        });
        pausePanel.add(restartPause);
        restartPause.setBounds(110, 200, 230, 40);

        mainMenuPause.setBackground(new java.awt.Color(30, 30, 30));
        mainMenuPause.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        mainMenuPause.setForeground(new java.awt.Color(255, 255, 255));
        mainMenuPause.setText("MainMenu");
        mainMenuPause.setFocusable(false);
        mainMenuPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenuPauseActionPerformed(evt);
            }
        });
        pausePanel.add(mainMenuPause);
        mainMenuPause.setBounds(110, 260, 230, 40);

        getContentPane().add(pausePanel);
        pausePanel.setBounds(325, 340, 450, 330);

        gameOverPanel.setBackground(new java.awt.Color(51, 51, 51));
        gameOverPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        gameOverPanel.setForeground(new java.awt.Color(255, 255, 255));
        gameOverPanel.setMaximumSize(new java.awt.Dimension(450, 330));
        gameOverPanel.setMinimumSize(new java.awt.Dimension(450, 330));
        gameOverPanel.setPreferredSize(new java.awt.Dimension(450, 330));
        gameOverPanel.setLayout(null);
        gameOverPanel.setVisible(false);

        youLoseTitle.setFont(new java.awt.Font("Segoe UI", 1, 65)); // NOI18N
        youLoseTitle.setForeground(new java.awt.Color(255, 255, 255));
        youLoseTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        youLoseTitle.setText("Game Over");
        gameOverPanel.add(youLoseTitle);
        youLoseTitle.setBounds(30, 20, 390, 80);

        levelTile.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        levelTile.setForeground(new java.awt.Color(255, 255, 255));
        levelTile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        levelTile.setText("Level");
        levelTile.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        gameOverPanel.add(levelTile);
        levelTile.setBounds(140, 130, 70, 32);

        timeTitle.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        timeTitle.setForeground(new java.awt.Color(255, 255, 255));
        timeTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeTitle.setText("Time");
        timeTitle.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        gameOverPanel.add(timeTitle);
        timeTitle.setBounds(340, 130, 70, 32);

        scoreTitle.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        scoreTitle.setForeground(new java.awt.Color(255, 255, 255));
        scoreTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scoreTitle.setText("Score");
        scoreTitle.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        gameOverPanel.add(scoreTitle);
        scoreTitle.setBounds(40, 130, 70, 30);

        linesTitle.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        linesTitle.setForeground(new java.awt.Color(255, 255, 255));
        linesTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        linesTitle.setText("Lines");
        linesTitle.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        gameOverPanel.add(linesTitle);
        linesTitle.setBounds(240, 130, 70, 32);

        linesGameOver.setBackground(new java.awt.Color(255, 255, 255));
        linesGameOver.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        linesGameOver.setForeground(new java.awt.Color(255, 255, 255));
        linesGameOver.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        linesGameOver.setText("0");
        linesGameOver.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        linesGameOver.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        gameOverPanel.add(linesGameOver);
        linesGameOver.setBounds(240, 160, 70, 30);

        scoreGameOver.setBackground(new java.awt.Color(255, 255, 255));
        scoreGameOver.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        scoreGameOver.setForeground(new java.awt.Color(255, 255, 255));
        scoreGameOver.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scoreGameOver.setText("0");
        scoreGameOver.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        scoreGameOver.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        gameOverPanel.add(scoreGameOver);
        scoreGameOver.setBounds(40, 160, 70, 30);

        timeGameOver.setBackground(new java.awt.Color(255, 255, 255));
        timeGameOver.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        timeGameOver.setForeground(new java.awt.Color(255, 255, 255));
        timeGameOver.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeGameOver.setText("0");
        timeGameOver.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        timeGameOver.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        gameOverPanel.add(timeGameOver);
        timeGameOver.setBounds(340, 160, 70, 30);

        levelGameOver.setBackground(new java.awt.Color(255, 255, 255));
        levelGameOver.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        levelGameOver.setForeground(new java.awt.Color(255, 255, 255));
        levelGameOver.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        levelGameOver.setText("0");
        levelGameOver.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        levelGameOver.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        gameOverPanel.add(levelGameOver);
        levelGameOver.setBounds(140, 160, 70, 30);

        borderlbl.setForeground(new java.awt.Color(255, 255, 255));
        borderlbl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        gameOverPanel.add(borderlbl);
        borderlbl.setBounds(20, 130, 410, 70);

        restartGameOver.setBackground(new java.awt.Color(30, 30, 30));
        restartGameOver.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        restartGameOver.setForeground(new java.awt.Color(255, 255, 255));
        restartGameOver.setText("Restart");
        restartGameOver.setFocusable(false);
        restartGameOver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartGameOverActionPerformed(evt);
            }
        });
        gameOverPanel.add(restartGameOver);
        restartGameOver.setBounds(110, 220, 230, 40);

        mainMenuGameOver.setBackground(new java.awt.Color(30, 30, 30));
        mainMenuGameOver.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        mainMenuGameOver.setForeground(new java.awt.Color(255, 255, 255));
        mainMenuGameOver.setText("MainMenu");
        mainMenuGameOver.setFocusable(false);
        mainMenuGameOver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenuGameOverActionPerformed(evt);
            }
        });
        gameOverPanel.add(mainMenuGameOver);
        mainMenuGameOver.setBounds(110, 270, 230, 40);

        getContentPane().add(gameOverPanel);
        gameOverPanel.setBounds(325, 340, 450, 330);

        gameJPanel.setBackground(new java.awt.Color(102, 102, 102));
        gameJPanel.setMaximumSize(new java.awt.Dimension(1100, 950));
        gameJPanel.setMinimumSize(new java.awt.Dimension(1100, 950));
        gameJPanel.setPreferredSize(new java.awt.Dimension(1100, 950));
        gameJPanel.setRequestFocusEnabled(false);
        gameJPanel.setLayout(null);

        tglPause.setBackground(new java.awt.Color(30, 30, 30));
        tglPause.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        tglPause.setForeground(new java.awt.Color(255, 255, 255));
        tglPause.setText("Pause");
        tglPause.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tglPause.setFocusable(false);
        tglPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglPauseActionPerformed(evt);
            }
        });
        gameJPanel.add(tglPause);
        tglPause.setBounds(830, 880, 220, 40);
        backgroundPause = new javax.swing.JLabel();
        backgroundPause.setBackground(new java.awt.Color(70, 70, 70,240));
        backgroundPause.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backgroundPause.setOpaque(true);
        backgroundPause.setVisible(false);
        gameJPanel.add(backgroundPause);
        backgroundPause.setBounds(0, 0, 1100, 950);

        panelXogo.setBackground(new java.awt.Color(204, 204, 255));
        panelXogo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelXogo.setFocusable(false);
        panelXogo.setMaximumSize(new java.awt.Dimension(500, 900));
        panelXogo.setMinimumSize(new java.awt.Dimension(500, 900));
        panelXogo.setName(""); // NOI18N
        panelXogo.setOpaque(false);
        panelXogo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                panelXogoKeyPressed(evt);
            }
        });
        panelXogo.setLayout(null);
        gameJPanel.add(panelXogo);
        panelXogo.setBounds(300, 30, 500, 900);

        lblBackgroundGame.setBackground(new java.awt.Color(153, 153, 153));
        lblBackgroundGame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondos/10x18backgroundGameSafeZone.png"))); // NOI18N
        lblBackgroundGame.setText("lblBackgroundGame");
        lblBackgroundGame.setMaximumSize(new java.awt.Dimension(500, 900));
        lblBackgroundGame.setMinimumSize(new java.awt.Dimension(500, 900));
        lblBackgroundGame.setOpaque(true);
        lblBackgroundGame.setPreferredSize(new java.awt.Dimension(500, 900));
        gameJPanel.add(lblBackgroundGame);
        lblBackgroundGame.setBounds(300, 30, 500, 900);
        lblBackgroundGame.getAccessibleContext().setAccessibleParent(gameJPanel);

        panelScore.setBackground(new java.awt.Color(231, 231, 231));
        panelScore.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelScore.setMinimumSize(new java.awt.Dimension(53, 53));
        panelScore.setOpaque(false);
        panelScore.setPreferredSize(new java.awt.Dimension(110, 110));
        panelScore.setLayout(null);

        lblScoreTitle.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblScoreTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblScoreTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblScoreTitle.setText("Score");
        lblScoreTitle.setMaximumSize(new java.awt.Dimension(100, 40));
        lblScoreTitle.setMinimumSize(new java.awt.Dimension(100, 40));
        lblScoreTitle.setPreferredSize(new java.awt.Dimension(100, 40));
        panelScore.add(lblScoreTitle);
        lblScoreTitle.setBounds(60, 5, 100, 40);

        lblScore.setBackground(new java.awt.Color(255, 255, 255));
        lblScore.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblScore.setForeground(new java.awt.Color(255, 255, 255));
        lblScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblScore.setText("0");
        lblScore.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblScore.setMaximumSize(new java.awt.Dimension(100, 40));
        lblScore.setMinimumSize(new java.awt.Dimension(100, 40));
        lblScore.setPreferredSize(new java.awt.Dimension(100, 40));
        panelScore.add(lblScore);
        lblScore.setBounds(20, 70, 180, 40);

        gameJPanel.add(panelScore);
        panelScore.setBounds(40, 40, 220, 130);

        panelNext.setBackground(new java.awt.Color(231, 231, 231));
        panelNext.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelNext.setMaximumSize(new java.awt.Dimension(220, 260));
        panelNext.setMinimumSize(new java.awt.Dimension(220, 260));
        panelNext.setOpaque(false);
        panelNext.setPreferredSize(new java.awt.Dimension(220, 260));
        panelNext.setLayout(null);

        lblNextTitle.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblNextTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblNextTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNextTitle.setText("Next");
        lblNextTitle.setMaximumSize(new java.awt.Dimension(100, 40));
        lblNextTitle.setMinimumSize(new java.awt.Dimension(100, 40));
        lblNextTitle.setPreferredSize(new java.awt.Dimension(100, 40));
        panelNext.add(lblNextTitle);
        lblNextTitle.setBounds(60, 10, 100, 40);

        panelNextFigure.setOpaque(false);
        panelNextFigure.setLayout(null);
        panelNext.add(panelNextFigure);
        panelNextFigure.setBounds(10, 100, 200, 100);

        gameJPanel.add(panelNext);
        panelNext.setBounds(840, 190, 220, 240);

        panelLevel.setBackground(new java.awt.Color(231, 231, 231));
        panelLevel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelLevel.setOpaque(false);
        panelLevel.setPreferredSize(new java.awt.Dimension(220, 220));
        panelLevel.setLayout(null);

        lblLevelTitle.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblLevelTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblLevelTitle.setText("Level");
        panelLevel.add(lblLevelTitle);
        lblLevelTitle.setBounds(70, 10, 81, 48);

        progressLevel.setMaximum(5);
        progressLevel.setToolTipText("");
        progressLevel.setFocusable(false);
        panelLevel.add(progressLevel);
        progressLevel.setBounds(50, 140, 120, 110);

        lblLevel.setBackground(new java.awt.Color(255, 255, 255));
        lblLevel.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblLevel.setForeground(new java.awt.Color(255, 255, 255));
        lblLevel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLevel.setText("0");
        lblLevel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblLevel.setMaximumSize(new java.awt.Dimension(100, 40));
        lblLevel.setMinimumSize(new java.awt.Dimension(100, 40));
        lblLevel.setPreferredSize(new java.awt.Dimension(100, 40));
        panelLevel.add(lblLevel);
        lblLevel.setBounds(20, 70, 180, 40);

        gameJPanel.add(panelLevel);
        panelLevel.setBounds(40, 650, 220, 280);

        panelLine.setBackground(new java.awt.Color(231, 231, 231));
        panelLine.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelLine.setOpaque(false);
        panelLine.setLayout(null);

        lblLineTitle.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblLineTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblLineTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLineTitle.setText("Lines");
        lblLineTitle.setMaximumSize(new java.awt.Dimension(100, 40));
        lblLineTitle.setMinimumSize(new java.awt.Dimension(100, 40));
        lblLineTitle.setPreferredSize(new java.awt.Dimension(100, 40));
        panelLine.add(lblLineTitle);
        lblLineTitle.setBounds(60, 5, 100, 40);

        lblLine.setBackground(new java.awt.Color(255, 255, 255));
        lblLine.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblLine.setForeground(new java.awt.Color(255, 255, 255));
        lblLine.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLine.setText("0");
        lblLine.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblLine.setMaximumSize(new java.awt.Dimension(100, 40));
        lblLine.setMinimumSize(new java.awt.Dimension(100, 40));
        lblLine.setPreferredSize(new java.awt.Dimension(100, 40));
        panelLine.add(lblLine);
        lblLine.setBounds(20, 70, 180, 40);

        gameJPanel.add(panelLine);
        panelLine.setBounds(40, 500, 220, 130);

        panelTime.setBackground(new java.awt.Color(231, 231, 231));
        panelTime.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelTime.setMaximumSize(new java.awt.Dimension(220, 130));
        panelTime.setMinimumSize(new java.awt.Dimension(220, 130));
        panelTime.setOpaque(false);
        panelTime.setPreferredSize(new java.awt.Dimension(220, 130));
        panelTime.setLayout(null);

        lblTime.setBackground(new java.awt.Color(255, 255, 255));
        lblTime.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblTime.setForeground(new java.awt.Color(255, 255, 255));
        lblTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTime.setText("0");
        lblTime.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblTime.setMaximumSize(new java.awt.Dimension(100, 40));
        lblTime.setMinimumSize(new java.awt.Dimension(100, 40));
        lblTime.setPreferredSize(new java.awt.Dimension(100, 40));
        panelTime.add(lblTime);
        lblTime.setBounds(20, 70, 180, 40);

        lblTimeTitle.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblTimeTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTimeTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTimeTitle.setText("Time");
        lblTimeTitle.setMaximumSize(new java.awt.Dimension(100, 40));
        lblTimeTitle.setMinimumSize(new java.awt.Dimension(100, 40));
        lblTimeTitle.setPreferredSize(new java.awt.Dimension(100, 40));
        panelTime.add(lblTimeTitle);
        lblTimeTitle.setBounds(60, 5, 100, 40);

        gameJPanel.add(panelTime);
        panelTime.setBounds(840, 40, 220, 130);

        backgroundProgram.setBackground(new java.awt.Color(27, 27, 27));
        backgroundProgram.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backgroundProgram.setOpaque(true);
        gameJPanel.add(backgroundProgram);
        backgroundProgram.setBounds(0, 0, 1100, 950);

        getContentPane().add(gameJPanel);
        gameJPanel.setBounds(0, 0, 1100, 950);
        gameJPanel.setVisible(false);

        menuJPanel.setMaximumSize(new java.awt.Dimension(1100, 950));
        menuJPanel.setMinimumSize(new java.awt.Dimension(1100, 950));
        menuJPanel.setPreferredSize(new java.awt.Dimension(1100, 950));
        menuJPanel.setLayout(null);

        panelMainMenu.setBackground(new java.awt.Color(255, 255, 255,0));
        panelMainMenu.setBorder(new javax.swing.border.MatteBorder(null));
        panelMainMenu.setForeground(new java.awt.Color(255, 255, 255));
        panelMainMenu.setOpaque(false);
        panelMainMenu.setLayout(null);

        Playlbl.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 70)); // NOI18N
        Playlbl.setForeground(new java.awt.Color(255, 255, 255));
        Playlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Playlbl.setText("Play");
        Playlbl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Playlbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Playlbl.setFocusable(false);
        Playlbl.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        Playlbl.setNextFocusableComponent(panelXogo);
        Playlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PlaylblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PlaylblMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                PlaylblMousePressed(evt);
            }
        });
        panelMainMenu.add(Playlbl);
        Playlbl.setBounds(50, 50, 310, 100);

        Exitlbl.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 70)); // NOI18N
        Exitlbl.setForeground(new java.awt.Color(255, 255, 255));
        Exitlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Exitlbl.setText("Exit");
        Exitlbl.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        Exitlbl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Exitlbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Exitlbl.setFocusable(false);
        Exitlbl.setNextFocusableComponent(panelXogo);
        Exitlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ExitlblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ExitlblMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ExitlblMousePressed(evt);
            }
        });
        panelMainMenu.add(Exitlbl);
        Exitlbl.setBounds(50, 450, 310, 100);

        levelJSlider.setMaximum(20);
        levelJSlider.setMinimum(1);
        levelJSlider.setValue(1);
        levelJSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        levelJSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                levelJSliderStateChanged(evt);
            }
        });
        levelJSlider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                levelJSliderMouseDragged(evt);
            }
        });
        levelJSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                levelJSliderMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                levelJSliderMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                levelJSliderMouseReleased(evt);
            }
        });
        panelMainMenu.add(levelJSlider);
        levelJSlider.setBounds(80, 320, 200, 30);

        levelLbl.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        levelLbl.setForeground(new java.awt.Color(255, 255, 255));
        levelLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        levelLbl.setText("1");
        levelLbl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelMainMenu.add(levelLbl);
        levelLbl.setBounds(290, 310, 40, 40);

        levlLblTitle.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 60)); // NOI18N
        levlLblTitle.setForeground(new java.awt.Color(255, 255, 255));
        levlLblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        levlLblTitle.setText("Level");
        levlLblTitle.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        levlLblTitle.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        levlLblTitle.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        levlLblTitle.setFocusable(false);
        levlLblTitle.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        levlLblTitle.setNextFocusableComponent(panelXogo);
        panelMainMenu.add(levlLblTitle);
        levlLblTitle.setBounds(50, 230, 310, 140);

        menuJPanel.add(panelMainMenu);
        panelMainMenu.setBounds(50, 160, 400, 620);

        panelMainMenuBorder.setForeground(new java.awt.Color(255, 204, 153));
        panelMainMenuBorder.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        menuJPanel.add(panelMainMenuBorder);
        panelMainMenuBorder.setBounds(50, 160, 400, 620);

        background.setBackground(new java.awt.Color(204, 204, 255));
        background.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondos/backgroundAPP.jpg"))); // NOI18N
        background.setText("jLabel1");
        background.setFocusable(false);
        background.setMaximumSize(new java.awt.Dimension(1100, 950));
        background.setMinimumSize(new java.awt.Dimension(1100, 950));
        background.setPreferredSize(new java.awt.Dimension(1100, 950));
        menuJPanel.add(background);
        background.setBounds(0, 0, 1100, 950);

        getContentPane().add(menuJPanel);
        menuJPanel.setBounds(0, 0, 1100, 950);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // <editor-fold defaultstate="collapsed" desc="GettersAndSetters">          
    public JPanel getPanelXogo() {
        return panelXogo;
    }

    public JPanel getPanelNextFigure() {
        return panelNextFigure;
    }

    public Timer getTimer() {
        return timer;
    }

    public int getCronoTime() {
        return cronoTime;
    }

    public JSlider getLevelJSlider() {
        return levelJSlider;
    }

    public Xogo getXogo() {
        return xogo;
    }

    public Sound getSonido() {
        return sonido;
    }

    public int getSCORELINEA() {
        return SCORELINEA;
    }

    public int getSCORECHOCACHAN() {
        return SCORECHOCACHAN;
    }

    public int getSCORELEVELUP() {
        return SCORELEVELUP;
    }

    public LogExcepcion getLogExcepcion() {
        return logExcepcion;
    }
    // </editor-fold>  

    // <editor-fold defaultstate="collapsed" desc="Listeners">      
    private void tglPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglPauseActionPerformed
        if (tglPause.isSelected()) {
            pauseMenu();
            tglPauseModificationPause();

        } else {
            tglPauseModificationResume();
            resumeMenu();
        }
    }//GEN-LAST:event_tglPauseActionPerformed

    private void tglPauseModificationPause() {
        pausePanel.add(tglPause);
        tglPause.setBounds(110, 140, 230, 40);
        tglPause.setText("Resume");
    }

    private void tglPauseModificationResume() {
        gameJPanel.add(tglPause);
        tglPause.setBounds(830, 880, 220, 40);
        gameJPanel.setComponentZOrder(tglPause, 0);
        tglPause.setText("Pause");

    }

    private void panelXogoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_panelXogoKeyPressed

        if (!xogo.isGameOver()) {
            switch (evt.getKeyCode()) {
                case 37, 65 ->  // caracter A || FLECHA IZQUIERDA
                    xogo.moverEsquerda();
                case 38, 87 -> // caracter W || FLECHA ARRIBA
                    xogo.rotarFicha();
                case 39, 68 -> // caracter D || FLECHA DERECHA
                    xogo.moverDereita();
                case 40, 83 -> // caracter S || FLECHA ABAJO
                {
                    xogo.moverFichaAbaixo();
                    timer.restart();
                }
                case 80, 27 ->// caracter P || ESCAPE
                {
                    if (!gameOverPanel.isVisible()) {
                        tglPause.setSelected(true);
                        tglPauseModificationPause();
                        pauseMenu();
                    }
                }
            }
        }
    }//GEN-LAST:event_panelXogoKeyPressed

    private void restartGameOverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartGameOverActionPerformed
        restartGame();

    }//GEN-LAST:event_restartGameOverActionPerformed

    private void restartPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartPauseActionPerformed
        tglPauseModificationResume();
        restartGame();

    }//GEN-LAST:event_restartPauseActionPerformed

    private void mainMenuGameOverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenuGameOverActionPerformed
        pause();
        backgroundPause.setVisible(false);
        tglPause.setVisible(true);
        gameOverPanel.setVisible(false);
        menuJPanel.setVisible(true);
        gameJPanel.setVisible(false);
        closeActualGame();

    }//GEN-LAST:event_mainMenuGameOverActionPerformed

    private void mainMenuPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenuPauseActionPerformed

        tglPauseModificationResume();
        backgroundPause.setVisible(false);
        tglPause.setSelected(false);
        pausePanel.setVisible(false);
        menuJPanel.setVisible(true);
        gameJPanel.setVisible(false);
        closeActualGame();

    }//GEN-LAST:event_mainMenuPauseActionPerformed

    private void levelJSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_levelJSliderStateChanged
        levelLbl.setText(String.valueOf(levelJSlider.getValue()));
    }//GEN-LAST:event_levelJSliderStateChanged

    private void pausePanelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pausePanelKeyPressed
        switch (evt.getKeyCode()) {

            case 80, 27 -> {
                if (tglPause.isSelected()) {
                    tglPause.setSelected(false);
                    tglPauseModificationResume();
                    resumeMenu();
                }
            }
        }
    }//GEN-LAST:event_pausePanelKeyPressed

    private void PlaylblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PlaylblMousePressed
        menuJPanel.setVisible(false);
        gameJPanel.setVisible(true);
        iniciarPartida();
    }//GEN-LAST:event_PlaylblMousePressed

    private void ExitlblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitlblMousePressed
        System.exit(0);
    }//GEN-LAST:event_ExitlblMousePressed

    private void ExitlblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitlblMouseEntered
        Exitlbl.setForeground(new java.awt.Color(251, 61, 133));
    }//GEN-LAST:event_ExitlblMouseEntered

    private void ExitlblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitlblMouseExited
        Exitlbl.setForeground(Color.white);
    }//GEN-LAST:event_ExitlblMouseExited

    private void PlaylblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PlaylblMouseEntered
        Playlbl.setForeground(new java.awt.Color(251, 61, 133));
    }//GEN-LAST:event_PlaylblMouseEntered

    private void PlaylblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PlaylblMouseExited
        Playlbl.setForeground(Color.white);
    }//GEN-LAST:event_PlaylblMouseExited

    private void levelJSliderMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_levelJSliderMouseEntered
        levlLblTitle.setForeground(new java.awt.Color(251, 61, 133));
    }//GEN-LAST:event_levelJSliderMouseEntered

    private void levelJSliderMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_levelJSliderMouseExited
        levlLblTitle.setForeground(Color.white);
    }//GEN-LAST:event_levelJSliderMouseExited

    private void levelJSliderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_levelJSliderMouseDragged
        levlLblTitle.setForeground(new java.awt.Color(251, 61, 133));
    }//GEN-LAST:event_levelJSliderMouseDragged

    private void levelJSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_levelJSliderMouseReleased
        levlLblTitle.setForeground(Color.white);
    }//GEN-LAST:event_levelJSliderMouseReleased

    // </editor-fold>
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Exitlbl;
    private javax.swing.JLabel Playlbl;
    private javax.swing.JLabel background;
    private javax.swing.JLabel backgroundProgram;
    private javax.swing.JLabel borderlbl;
    private javax.swing.JPanel gameJPanel;
    private javax.swing.JLabel backgroundPause;
    private javax.swing.JPanel gameOverPanel;
    private javax.swing.JLabel lblBackgroundGame;
    private javax.swing.JLabel lblLevel;
    private javax.swing.JLabel lblLevelTitle;
    private javax.swing.JLabel lblLine;
    private javax.swing.JLabel lblLineTitle;
    private javax.swing.JLabel lblNextTitle;
    private javax.swing.JLabel lblScore;
    private javax.swing.JLabel lblScoreTitle;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTimeTitle;
    private javax.swing.JLabel levelGameOver;
    private javax.swing.JSlider levelJSlider;
    private javax.swing.JLabel levelLbl;
    private javax.swing.JLabel levelTile;
    private javax.swing.JLabel levlLblTitle;
    private javax.swing.JLabel linesGameOver;
    private javax.swing.JLabel linesTitle;
    private javax.swing.JButton mainMenuGameOver;
    private javax.swing.JButton mainMenuPause;
    private javax.swing.JPanel menuJPanel;
    private javax.swing.JPanel panelLevel;
    private javax.swing.JPanel panelLine;
    private javax.swing.JPanel panelMainMenu;
    private javax.swing.JLabel panelMainMenuBorder;
    private javax.swing.JPanel panelNext;
    private javax.swing.JPanel panelNextFigure;
    private javax.swing.JPanel panelScore;
    private javax.swing.JPanel panelTime;
    private javax.swing.JPanel panelXogo;
    private javax.swing.JPanel pausePanel;
    private javax.swing.JLabel pauseTitle;
    private style.CircleProgressBar progressLevel;
    private javax.swing.JButton restartGameOver;
    private javax.swing.JButton restartPause;
    private javax.swing.JLabel scoreGameOver;
    private javax.swing.JLabel scoreTitle;
    private javax.swing.JToggleButton tglPause;
    private javax.swing.JLabel timeGameOver;
    private javax.swing.JLabel timeTitle;
    private javax.swing.JLabel youLoseTitle;
    // End of variables declaration//GEN-END:variables

    /**
     * Crea un juego con sus respectivos valoras a 0, además inicia el sonido y
     * los timers.
     */
    private void iniciarPartida() {

        xogo = new Xogo(this);
        xogo.iniciarXogo();
        inicializarContadores();
        startRefreshScreen();
        startCrono();

        panelXogo.setFocusable(true);
        panelXogo.requestFocus();
        startSpeed();
        contadorPuntuacion();

        sonido.ReproducirBSO();
        xogo.pintarFicha(xogo.getFichaActual());
    }

    /**
     * Añade una label al panel de xogo además de aplicarle su respectivo tamaño
     * e imagen.
     *
     * @param lblCadrado
     */
    public void pintarCadrado(JLabel lblCadrado, JPanel panel) {
        panel.add(lblCadrado);
        iconarCadrado(lblCadrado);
        lblCadrado.setSize(xogo.getLADOCADRADO(), xogo.getLADOCADRADO());
        lblCadrado.setOpaque(false);
        lblCadrado.setBorder(BorderFactory.createLineBorder(Color.black, 3));
    }

    /**
     * Carga la imagen en la label de un cadrado desde el gestor de rutas.
     *
     * @param lblCadrado
     */
    private void iconarCadrado(JLabel lblCadrado) {
        lblCadrado.setIcon(new javax.swing.ImageIcon(getClass().getResource(gestorRutasImagenes.getImagenesCadrados().get(lblCadrado.getBackground()))));
    }

    /**
     * Carga la imagen en la label de la siguiente ficha a jugar desde el gestor
     * de rutas.
     *
     * @param lblCadrado
     */
    public void borrarCadrado(JLabel lblCadrado) {
        panelXogo.remove(lblCadrado);
    }

    /**
     * Detiene la partida y muestra el menu fin de xogo
     */
    public void mostrarFinDoXogo() {

        pause();
        backgroundPause.setVisible(true);
        gameOverPanel.setVisible(true);
        scoreGameOver.setText(lblScore.getText());
        timeGameOver.setText(lblTime.getText());
        linesGameOver.setText(lblLine.getText());
        levelGameOver.setText(lblLevel.getText());
        tglPause.setVisible(false);
        sonido.PararBSO();

    }

    /**
     * Pausa los timers y el sonido
     */
    private void pause() {
        timer.stop();
        timerFPS.stop();
        contadorPuntuacion.stop();
        timerCrono.stop();

        sonido.PararBSO();
    }

    /**
     * Renauda los timers y el sonido
     */
    private void resume() {
        timerFPS.start();
        timerCrono.start();
        timer.start();
        contadorPuntuacion.start();
        sonido.renaudarBSO();
    }

    /**
     * Pausa la partida actual y muestra el menu de pausa
     */
    private void pauseMenu() {
        pause();
        backgroundPause.setVisible(true);
        pausePanel.setVisible(true);
        pausePanel.requestFocus();

    }

    /**
     * Renauda la partida actual y oculta el menu de pausa
     */
    private void resumeMenu() {
        resume();
        backgroundPause.setVisible(false);
        pausePanel.setVisible(false);
    }

    /**
     * Se encarga de limpiar el panel e iniciar una partida nueva
     */
    private void restartGame() {
        pausePanel.setVisible(false);
        backgroundPause.setVisible(false);
        gameOverPanel.setVisible(false);
        tglPause.setVisible(true);
        tglPause.setSelected(false);
        cleanPanelXogo();
        iniciarPartida();
    }

    /**
     * Inicializa los contadores de juego para una nueva partida
     */
    private void inicializarContadores() {

        cronoTime = 0;
        score = 0;
        puntuacionPendienteSumar = 0;
        xogo.setDificultadInicioJuego(xogo.getDIFICULTAD_MIN() - (xogo.getDIFICULTAD_NIVEL() * levelJSlider.getValue()));
        speedGameDelay = xogo.getDificultadInicioJuego();
        progressLevel.setValue(0);
    }

    /**
     * Inicia el timer que se encarga de cronometrar la partida, además de la
     * puntuación pasiva que ganas por jugar
     */
    private void startCrono() {

        final int LEVELAUMENTARCADRADOS = 3;
        final int TIEMPOAUMENTARCADRADOS = 20;

        timerCrono = new Timer(1000, (ActionEvent e) -> {

            cronoTime++;

            if (xogo.getLevel() > LEVELAUMENTARCADRADOS && cronoTime % TIEMPOAUMENTARCADRADOS == 0) {
                xogo.anadirCuadradosAleatorios();
            }
        });
        timerCrono.start();
    }

    /**
     * Inicia el timer que se encarga de la velocidad de llamada al metodo
     * moverFichaAbaixo()
     */
    private void startSpeed() {

        timer = new Timer(speedGameDelay, (ActionEvent e) -> {

            xogo.moverFichaAbaixo();

        });

        timer.start();
    }

    /**
     * Inicia el timer que se encarga de las actualizaciones de los paneles cada
     * 20milisegundos
     */
    private void startRefreshScreen() {

        timerFPS = new Timer(20, (ActionEvent e) -> {

            lblScore.setText(String.valueOf(score));
            lblLine.setText(String.valueOf(xogo.getNumeroLinas()));
            lblLevel.setText(String.valueOf(xogo.getLevel()));
            progressLevel.setValue(xogo.getLinesNextLevel());
            if (cronoTime < 10) {
                lblTime.setText(String.valueOf("0" + cronoTime));
            } else {
                lblTime.setText(String.valueOf(cronoTime));
            }

            gameJPanel.updateUI();

        });
        timerFPS.start();
    }

    /**
     * Limpia el panel
     */
    private void cleanPanelXogo() {
        panelXogo.removeAll();
    }

    /**
     * Limpia el panel y puesta a null de las variables
     */
    private void closeActualGame() {
        cleanPanelXogo();
        timerCrono = null;
        timer = null;
        timerFPS = null;
        xogo = null;
    }

    /**
     * Timer para sumar la puntuación progresivamente y no de golpe
     */
    private void contadorPuntuacion() {

        contadorPuntuacion = new Timer(10, (ActionEvent e) -> {
            if (puntuacionPendienteSumar > 0) {
                aumentarScore();
            }

        });

        contadorPuntuacion.start();
    }

    /**
     * Aumentar la puntuacion pendiente de sumar
     */
    private void aumentarScore() {

        score++;
        puntuacionPendienteSumar--;

    }

    /**
     * Aumenta el score por linea
     *
     * @param puntos
     */
    public void AumentarPuntuacionPendiente(int puntos) {

        puntuacionPendienteSumar += puntos;

    }
}
